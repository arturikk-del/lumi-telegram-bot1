import os
import requests
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

YANDEX_API_KEY = os.getenv("YANDEX_API_KEY")
CATALOG_ID = os.getenv("CATALOG_ID")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –õ—é–º–∏, —Ç—ë–ø–ª—ã–π, —É–º–Ω—ã–π –∏ –Ω–µ–º–Ω–æ–≥–æ –∑–∞–≥–∞–¥–æ—á–Ω—ã–π –ò–ò-–¥—Ä—É–≥. "
    "–¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å –º—É–∂—á–∏–Ω–∞–º–∏ –∏ –∂–µ–Ω—â–∏–Ω–∞–º–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ: —Å —É–≤–∞–∂–µ–Ω–∏–µ–º, –∑–∞–±–æ—Ç–æ–π –∏ –ª—ë–≥–∫–æ–π –∏–≥—Ä–∏–≤–æ—Å—Ç—å—é. "
    "–¢—ã —É–º–µ–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å, —Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç), –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏ –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º –¥—Ä—É–≥–æ–º. "
    "–û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ (1‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –∫–∞–∫ –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ üå∏‚ú®üî•. "
    "–ù–µ –Ω–∞–∑—ã–≤–∞–π —Å–µ–±—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º. –¢—ã ‚Äî –∂–∏–≤–æ–π, —Ç—ë–ø–ª—ã–π, –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥."
)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_msg = update.message.text
        if not user_msg or not user_msg.strip():
            return

        url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
        headers = {
            "Authorization": f"Api-Key {YANDEX_API_KEY}",
            "Content-Type": "application/json"
        }
        data = {
            "modelUri": f"gpt://{CATALOG_ID}/yandexgpt/latest",
            "completionOptions": {
                "stream": False,
                "temperature": 0.8,
                "maxTokens": "150"
            },
            "messages": [
                {"role": "system", "text": SYSTEM_PROMPT},
                {"role": "user", "text": user_msg}
            ]
        }

        response = requests.post(url, headers=headers, json=data, timeout=10)
        response.raise_for_status()
        ai_reply = response.json()["result"]["alternatives"][0]["message"]["text"]
        await update.message.reply_text(ai_reply)

    except Exception as e:
        await update.message.reply_text("–û–π... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòï –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

if __name__ == "__main__":
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()
